create table customer
(
customer_id   number,
customer_name  varchar(60),
address        varchar(70),
contact        varchar(50),
login          varchar(20),
password      varchar(20),
constraints cus_pk_customer_id primary key(customer_id)
);


create table account
(
account_id   number,
account_type_id  number,
account_name     varchar(40),
open_date      date,
customer_id    number,
constraints ac_pk_account_id primary key(account_id),
constraints ac_fk_account_type_id foreign key(account_type_id) references account_type(account_type_id),
constraints ac_fk_customer_id foreign key(customer_id) references customer(customer_id)
);

 

create table account_type
(
account_type_id   number,
name              varchar(30),
constraints ac_type_pk_account_type_id primary key(account_type_id) 
);


create table purchase
(
purchase_id    number,
purchase_date  date,
account_id     number,
bank_service_id  number,
amount           decimal(10,2),
constraints pc_pk_purchase_id primary key(purchase_id),
constraints pc_fk_bank_service_id foreign key(bank_service_id) references bank_service(bank_service_id),
constraints pc_fk_account_id foreign key(account_id) references account(account_id)
);


create table bank_service
(
bank_service_id   number,
name              varchar(30),
service_type_id    number,
description        varchar(100),
constraints bs_pk_bank_service_id primary key(bank_service_id),
constraints bs_fk_service_type_id foreign key(service_type_id) references service_type(service_type_id)
);

create table service_type
(
service_type_id    number,
name              varchar(20),
constraints st_pk_service_type_id primary key(service_type_id)
);



create sequence cus_seq
start with 10
increment by 10
maxvalue 50;


create sequence ac_seq
start with 100
increment by 1
maxvalue 110;


create sequence act_seq
start with 2
increment by 2
maxvalue 12;


create sequence pc_seq
start with 1
increment by 1
maxvalue 10;



create sequence bank_seq
start with 10
increment by 5
maxvalue 50;



create sequence sc_seq
start with 10
increment by 1
maxvalue 10;



create table cus_error_log
(
errorcode     varchar(50),
errormsg      varchar(50),
username      varchar(30),
errrortime    timestamp,
blockname     varchar(50)
);





create table ac_error_log
(
errorcode     varchar(50),
errormsg      varchar(50),
username      varchar(30),
errrortime    timestamp,
blockname     varchar(50)
);






create table act_error_log
(
errorcode     varchar(50),
errormsg      varchar(50),
username      varchar(30),
errrortime    timestamp,
blockname     varchar(50)
);





create table pc_error_log
(
errorcode     varchar(50),
errormsg      varchar(50),
username      varchar(30),
errrortime    timestamp,
blockname     varchar(50)
);





create table bank_error_log
(
errorcode     varchar(50),
errormsg      varchar(50),
username      varchar(30),
errrortime    timestamp,
blockname     varchar(50)
);




create table sc_error_log
(
errorcode     varchar(50),
errormsg      varchar(50),
username      varchar(30),
errrortime    timestamp,
blockname     varchar(50)
);



create or replace procedure sp_cus_error_log
(
p_errorcode in varchar,
p_errormsg  in varchar,
p_blockname in varchar
)
as
pragma autonomous_transaction;
begin
insert into cus_error_log values(p_errorcode,p_errormsg,user,sysdate,p_blockname);
commit;
end;
/


create or replace procedure sp_ac_error_log
(
p_errorcode in varchar,
p_errormsg  in varchar,
p_blockname in varchar
)
as
pragma autonomous_transaction;
begin
insert into ac_error_log values(p_errorcode,p_errormsg,user,sysdate,p_blockname);
commit;
end;
/




create or replace procedure sp_act_error_log
(
p_errorcode in varchar,
p_errormsg  in varchar,
p_blockname in varchar
)
as
pragma autonomous_transaction;
begin
insert into act_error_log values(p_errorcode,p_errormsg,user,sysdate,p_blockname);
commit;
end;
/



create or replace procedure sp_pc_error_log
(
p_errorcode in varchar,
p_errormsg  in varchar,
p_blockname in varchar
)
as
pragma autonomous_transaction;
begin
insert into pc_error_log values(p_errorcode,p_errormsg,user,sysdate,p_blockname);
commit;
end;
/




create or replace procedure sp_bank_error_log
(
p_errorcode in varchar,
p_errormsg  in varchar,
p_blockname in varchar
)
as
pragma autonomous_transaction;
begin
insert into bank_error_log values(p_errorcode,p_errormsg,user,sysdate,p_blockname);
commit;
end;
/



create or replace procedure sp_sc_error_log
(
p_errorcode in varchar,
p_errormsg  in varchar,
p_blockname in varchar
)
as
pragma autonomous_transaction;
begin
insert into sc_error_log values(p_errorcode,p_errormsg,user,sysdate,p_blockname);
commit;
end;
/



create or replace procedure cus_sp
(
p_customer_name in varchar,
p_address       in varchar,
p_contact       in varchar,
p_login         in varchar,
p_password      in varchar
)
as
lv_errorcode      varchar(100);
lv_errormsg       varchar(100);
begin
insert into customer values(
cus_seq.nextval,
p_customer_name,
p_address,
p_contact,
p_login,
p_password
);
commit;
exception
when others then
lv_errorcode  :=sqlcode;
lv_errormsg   :=substr(sqlerrm,1,30);
sp_cus_error_log(lv_errorcode,lv_errormsg,'cus_sp');
end;
/


create or replace procedure ac_sp
(
p_account_name   in varchar,
p_open_date      in date
)
as
lv_errorcode      varchar(100);
lv_errormsg       varchar(100);
begin
insert into account values(
ac_seq.nextval,
act_seq.nextval,
p_account_name,
p_open_date,
cus_seq.nextval
);
commit;
exception
when others then
lv_errorcode  :=sqlcode;
lv_errormsg   :=substr(sqlerrm,1,30);
sp_ac_error_log(lv_errorcode,lv_errormsg,'ac_sp');
end;
/


create or replace procedure act_sp
(
p_name  in varchar
)
as
lv_errorcode      varchar(100);
lv_errormsg       varchar(100);
begin
insert into account_type values(
act_seq.nextval,
p_name
);
commit;
exception
when others then
lv_errorcode  :=sqlcode;
lv_errormsg   :=substr(sqlerrm,1,30);
sp_act_error_log(lv_errorcode,lv_errormsg,'act_sp');
end;
/


create or replace procedure pc_sp
(
p_purchase_date  in date,
p_amount         in decimal
)
as
lv_errorcode      varchar(100);
lv_errormsg       varchar(100);
begin
insert into purchase values(
pc_seq.nextval,
p_purchase_date,
ac_seq.nextval,
bank_seq.nextval,
p_amount
);
commit;
exception
when others then
lv_errorcode  :=sqlcode;
lv_errormsg   :=substr(sqlerrm,1,30);
sp_pc_error_log(lv_errorcode,lv_errormsg,'pc_sp');
end;
/


create or replace procedure bs_sp
(
p_name         in varchar,
p_description  in varchar
)
as
lv_errorcode      varchar(100);
lv_errormsg       varchar(100);
begin
insert into bank_service values(
bank_seq.nextval,
p_name,
sc_seq.nextval,
p_description
);
commit;
exception
when others then
lv_errorcode  :=sqlcode;
lv_errormsg   :=substr(sqlerrm,1,30);
sp_bank_error_log(lv_errorcode,lv_errormsg,'bs_sp');
end;
/

create or replace procedure sc_sp
(
p_name  in varchar
)
as
lv_errorcode      varchar(100);
lv_errormsg       varchar(100);
begin
insert into service_type values(
sc_seq.nextval,
p_name
);
commit;
exception
when others then
lv_errorcode  :=sqlcode;
lv_errormsg   :=substr(sqlerrm,1,30);
sp_sc_error_log(lv_errorcode,lv_errormsg,'sc_sp');
end;
/





begin
insert into customer values(
p_customer_name=>'Gokul',
p_adress=>'12b Anna nagar chennai-003',
p_contact=>9087654321,
p_login=>'ggg',
p_password=>'gokul123'
);
commit;
end;
/

















